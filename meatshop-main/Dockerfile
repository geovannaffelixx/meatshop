# ============================================
# üß© STAGE 1 ‚Äî BUILD (Next.js)
# ============================================
FROM node:20-alpine AS builder

# Instala depend√™ncias nativas b√°sicas (caso precise de pacotes com build)
RUN apk add --no-cache libc6-compat

WORKDIR /usr/src/app

# Copia apenas arquivos de depend√™ncias (melhor cache)
COPY package*.json ./

# Instala depend√™ncias completas (dev + build)
RUN npm ci

# Copia o c√≥digo-fonte e arquivos de config
COPY . .

# Gera o build otimizado do Next.js
RUN npm run build


# ============================================
# üöÄ STAGE 2 ‚Äî RUNTIME (produ√ß√£o)
# ============================================
FROM node:20-alpine AS runtime

WORKDIR /usr/src/app

# Copia apenas os manifestos e instala somente depend√™ncias de produ√ß√£o
COPY package*.json ./
RUN npm ci --omit=dev

# Copia o build gerado no est√°gio anterior
COPY --from=builder /usr/src/app/.next ./.next
COPY --from=builder /usr/src/app/public ./public
COPY --from=builder /usr/src/app/next.config.ts ./next.config.ts
COPY --from=builder /usr/src/app/package*.json ./

# Define usu√°rio n√£o-root (melhor seguran√ßa)
USER node

# Define vari√°veis de ambiente padr√£o
ENV NODE_ENV=production \
    PORT=3000 \
    NEXT_TELEMETRY_DISABLED=1 \
    TZ=America/Sao_Paulo

EXPOSE 3000

# Volume opcional (para logs, se quiser persistir)
VOLUME ["/usr/src/app/logs"]

# Comando de inicializa√ß√£o
CMD ["npm", "start"]
